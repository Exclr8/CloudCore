<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DatabaseConnect" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAIcAAFB1d1R4elODhlWFiFyChFmHilyJjF6NkFiTnl2WoGOEhmaFiGKMjWuLjWSOkGyO
        kWSQk2eWm2uTlG2WmGyZnXOMjnSSlHKanHmUlnmWmHyYmmCXoWOapGeeqW6coWieqHOdoHifoWuhq3Wh
        pXCkrXyjpHymqXyprXSnsHaosXustH+wuL8sDr4+AMAtD8IuEMczFck0Fss1GM44GtcvANs1AN86ANE6
        HOI9AM1aANNGANRTAdZdCMdSONBEItpKKNBOMdNZP91TNN9lAOZCAOlEAO1KCu9dAfFNA/FaAP5SAP1a
        AP5aDeldMuRtAPV0APl0APZlO953Tcp5aON2Ud2HAN2DCN+IAuCBAOKKAOyEAO+MAOWaAOiRAOuaAPGA
        APCSAP2TAPmbAOqrAO24APalAPWsAPyiAP2qAPSzAPa6APuyAP67AOamIfaAWv6JXeOCYOeLevWMbPmD
        YPyQbP3CAPzLAPXRAPzTAPzbAPTcO/7jAf/tA//xB//yCPjjIP/4JYGdn4ialoSio4KnqIaoqYmkpoqm
        qIqqqoOtsYuusIKxuYyxtIu2u4u4vZCurp6rpZSyspS2uZK6vZu1t563uJ65uqCspqK1t6S9vbC9vr++
        t468wpK8wpu+wZTBx5fDyZzBxZvEyp/IzaLBw6LHzKLJzqfIyqTJz63ExKrKzKPL0KTK0KfN0anN0q3P
        06zP1K3Q1LLExbLHyLTKyrjFxrzOzrLO0brP0bHQ07HS1rLU17XS1rTU17TU2LvS07rW2rvZ3L/c4NSb
        h82mlMaqo8WxrM20qPqzn8TBucnFvf3Aq/LAtsjMx8PU1MLY2MDa3sHc38Xa2sjS083c3NDd3cLd4Mnf
        4dHf4Mzh5NHg4dHj5dHk5tXh4dbl5dPm6Nbo6tvl5dzq6vXQy/vRxuDm5uDq6uHs7eXu7uro5eLu8Onv
        8Obw8erw8Ony9Ov09ezy8u3z9O309f3o4/H19fD3+PP4+Pb5+f7z8fj6+vj7/Pr8/P75+f7+/gAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAMAAwAAAI/wD7CRwo8J48d+e4CdsFixUqU6se
        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
        TEiBCUqIsYxnPGMmvCG2BAkIADs=
</value>
  </data>
</root>